pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                echo "Stage 1: Compiling and packaging the source code with the help of maven"
            }
        }

        stage('Unit and Integration Tests') {
            steps {
                echo "Stage 2: Executing unit and integration tests using JUnit"
            }
        }

        stage('Code Analysis') {
            steps {
                echo "Stage 3: Performing code analysis to maintain quality using a tool called SonarQube"
            }
        }

        stage('Security Scan') {
            steps {
                echo "Stage 4: Conducting a security scan for vulnerabilities using a tool called OWASP ZAP"
            }
        }

        stage('Deploy to Staging') {
            steps {
                echo "Stage 5: Deploying to a staging server to AWS EC2"
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                echo "Stage 6: Running integration tests in the staging environment"
            }
        }

        stage('Deploy to Production') {
            steps {
                echo "Stage 7: Deploying to a production server to AWS EC2"
            }
        }
    }

    post {
        failure {
            script {
                emailext subject: "Pipeline Failed: ${currentBuild.fullDisplayName}",
                          body: "The pipeline has failed. Please check the logs for details.",
                          to: 'rkdm167@gmail.com',
                          attachLog: true
            }
        }
        success {
            script {
                emailext subject: "Pipeline Succeeded: ${currentBuild.fullDisplayName}",
                          body: "The pipeline has succeeded.",
                          to: 'rkdm167@gmail.com',
                          attachLog: true
            }
        }
    }
}
